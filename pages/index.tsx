import Head from "next/head";
import { useSelector, useDispatch } from "react-redux";
import Pagination from "../components/pagination";
import { useState } from "react";
import {
  selectData,
  setDataByKey,
} from "../redux-handler/reducers/dataReducer";
import Link from "next/link";

export default function Home() {
  const data = useSelector(selectData);
  const dispatch = useDispatch();

  const posts = data.posts;
  const users = data.users;
  const comments = data.comments;

  const [page, setPage] = useState({
    current: 1,
    item: 20,
    total: posts.length,
  });

  const handleDelete = (id: number) => {
    const post = posts.filter((f: any) => f.id !== id);
    dispatch(
      setDataByKey({
        key: "posts",
        data: post,
      })
    );
    setPage({ ...page, total: post.length });
  };

  let from =
    page.current * page.item - page.item > page.total
      ? page.total
      : page.current * page.item - page.item;
  let to =
    page.current * page.item > page.total
      ? page.total
      : page.current * page.item;

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="row tm-row">
        {posts &&
          posts.length > 0 &&
          posts.slice(from, to).map((post: any, i: any) => (
            <article key={i} className="col-12 col-md-6 tm-post">
              <hr className="tm-hr-primary" />
              <div className="position-relative">
                <Link
                  href={`/post/${post.id}`}
                  className="effect-lily tm-post-link tm-pt-6">
                  <>
                    <div className="tm-post-link-inner">
                      <img
                        src={`https://dummyimage.com/600x300/${Math.floor(
                          Math.random() * 16777215
                        ).toString(16)}/fff`}
                        alt="Image"
                        className="img-fluid"
                      />
                    </div>
                    <h2 className="tm-pt-30 tm-color-primary tm-post-title">
                      {post.title}
                    </h2>
                  </>
                </Link>
                <button
                  className="position-absolute tm-new-badge border-0"
                  onClick={() => handleDelete(post.id)}>
                  <i className="fas fa-trash" />
                </button>
              </div>
              <p className="tm-pt-20">{post.body}</p>
              <hr />
              <div className="d-flex justify-content-between">
                <span>
                  {comments.length > 0 &&
                    comments.filter((f: any) => f.postId === post.id)
                      .length}{" "}
                  comments
                </span>
                <span>
                  {users.length > 0 &&
                    users.filter((f: any) => f.id === post.userId)[0].name}
                </span>
              </div>
            </article>
          ))}
      </div>
      <Pagination page={page} setPage={setPage} />
    </>
  );
}
